{"version":3,"file":"characters-lib.js.map","sources":["ng://characters-lib/lib/models/character.model.ts","ng://characters-lib/lib/characters-lib.service.ts","ng://characters-lib/lib/components/characters-home/characters-home.component.ts","ng://characters-lib/lib/components/characters-profile/characters-profile.component.ts","ng://characters-lib/lib/components/characters-collection/characters-collection.component.ts","ng://characters-lib/lib/characters-lib.module.ts"],"sourcesContent":["import { Phenotype } from './phenotype.model';\n\nexport class Character {\n  uuid = null;\n  name = 'Default Character';\n  dob = 123;\n  species = 'Human';\n  phenotype: Phenotype;\n  category = ['General'];\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { LocalStorageService } from 'ngx-store';\nimport { DatasetsLibService } from 'datasets-lib';\nimport { UuidService } from 'shared-lib';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Character } from './models/character.model';\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class CharactersLibService implements OnInit {\n  private charactersStream: BehaviorSubject<Character[]>;\n  private currentStream: BehaviorSubject<Character>;\n  private initialized: boolean;\n\n  constructor(\n    public localStorageService: LocalStorageService,\n    public uuidService: UuidService,\n    private datasetService: DatasetsLibService\n    ) {\n    this.initialized = false;\n    this.charactersStream = new BehaviorSubject<Character[]>(null);\n    this.currentStream = new BehaviorSubject<Character>(null);\n  }\n\n  public get characters(): Observable<Character[]> {\n    return this.charactersStream.asObservable();\n  }\n  private setCharacters(charactersArray) {\n    this.charactersStream.next(charactersArray);\n    this.localStorageService.set('characters', charactersArray);\n  }\n\n  public getCharacter(character?): Observable<Character> {\n    if (!character) {\n      return this.charactersStream.pipe(\n        map(chrs => chrs[0])\n      );\n      }\n    return this.charactersStream.pipe(\n      map(chrs => chrs.find(chr => chr.uuid === character.uuid))\n    );\n  }\n\n  public getCharacterById(uuid: number) {\n    return this.charactersStream.pipe(\n      map(chrs => chrs.find(chr => chr.uuid === uuid))\n    );\n  }\n\n  public get current(): Observable<Character> {\n    return this.currentStream.asObservable();\n  }\n  public setCurrent(character: Character): void {\n    this.currentStream.next(character);\n    this.localStorageService.set('currentCharacter', character);\n  }\n\n  public ngOnInit() {}\n\n  public init(): Promise<any> {\n    if (!this.initialized) {\n      this.loadCharacters();\n      this.initialized = true;\n    }\n    return new Promise(resolve => {\n      resolve(this.initialized);\n    });\n  }\n  private loadCharacters(): void {\n    const charactersObs = this.datasetService.getCharacters();\n    let chrArray: any[];\n    charactersObs.subscribe(chrs => {\n      chrArray = chrs;\n      console.log(chrArray);\n      this.setCharacters(chrArray);\n      this.loadCurrent();\n      console.log('Characters loaded from SwAPI.co!');\n    });\n  }\n\n  private loadCurrent(): void {\n    let chr = this.localStorageService.get('current');\n    if (!chr) {\n      console.log('No current character in LocalStorage.');\n      this.characters.subscribe(chrs => chr = chrs[0]);\n    }\n    this.setCurrent(chr);\n    console.log('Current set to: ', chr.title);\n  }\n\n  public createCharacter(): Character {\n    const chr = new Character();\n    chr.uuid = this.uuidService.generate();\n    return chr;\n  }\n\n  public addCharacters(charactersArray) {\n    console.log('adding chrs: ', charactersArray);\n    for (const chr of charactersArray) {\n      this.uuidService.cache(chr.uuid);\n    }\n    this.setCharacters(charactersArray);\n  }\n\n  public addCharacter(character: Character) {\n    this.uuidService.cache(character.uuid);\n    const charactersArray = [ ...this.charactersStream.getValue(), character ];\n    this.setCharacters(charactersArray);\n  }\n\n  public updateCharacter(character: Character) {\n    const charactersArray = [ ...this.charactersStream.getValue()];\n    const index = charactersArray.findIndex(item => item.uuid === character.uuid);\n    charactersArray.splice(index, 1, character);\n    this.setCharacters(charactersArray);\n  }\n\n  public deleteCharacter(character: Character) {\n    const charactersArray = this.charactersStream.getValue().filter(chr => chr.uuid !== character.uuid);\n    this.uuidService.release(character.uuid);\n\n    // If deleting character leaves Characters empty, create and add new default character.\n    if (!charactersArray.length) {\n      const chr = this.createCharacter();\n      charactersArray.push(chr);\n    }\n    this.setCharacters(charactersArray);\n\n    // If current, set to first in characters list.\n    let currentUuid: string;\n    this.current.subscribe(curr => currentUuid = curr.uuid);\n    if (character.uuid === currentUuid) {\n      let chr: Character;\n      this.characters.subscribe(chrs => chr = chrs[0]);\n      this.setCurrent(chr);\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CharactersLibService } from '../../characters-lib.service';\nimport { Character } from '../../models/character.model';\n\n@Component({\n  selector: 'characters-home',\n  templateUrl: './characters-home.component.html',\n  styleUrls: ['./characters-home.component.scss']\n})\nexport class CharactersHomeComponent implements OnInit {\n  public characters: Observable<Character[]>;\n  private _current: Observable<Character>;\n\n  constructor(\n    private charactersService: CharactersLibService\n   ) {\n    this.characters = this.charactersService.characters;\n    this._current = this.charactersService.current;\n   }\n\n  ngOnInit() {}\n\n  public get current(): any {\n    return this._current;\n   }\n   public set current(character: any) {\n     this.charactersService.setCurrent(character);\n   }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CharactersLibService } from '../../characters-lib.service';\nimport { Character } from '../../models/character.model';\n\n@Component({\n  selector: 'characters-profile',\n  templateUrl: './characters-profile.component.html',\n  styleUrls: ['./characters-profile.component.scss']\n})\nexport class CharactersProfileComponent implements OnInit {\n  public current: Observable<Character>;\n\n  constructor(\n    private charactersLibService: CharactersLibService\n    ) {\n    this.current = this.charactersLibService.current;\n    }\n\n  ngOnInit() {\n    console.log(this.current);\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { CharactersLibService } from '../../characters-lib.service';\nimport { Character } from '../../models/character.model';\n\n@Component({\n  selector: 'characters-collection',\n  templateUrl: './characters-collection.component.html',\n  styleUrls: ['./characters-collection.component.scss']\n})\nexport class CharactersCollectionComponent {\n  @Input() characters: Observable<any[]>;\n  public cols: Observable<number>;\n\n  constructor(\n    private router: Router,\n    private breakpointObserver: BreakpointObserver,\n    private charactersLibService: CharactersLibService\n    ) {\n    this.characters = this.charactersLibService.characters;\n\n    /** Based on the screen size, switch from standard to one column per row */\n    this.cols = this.breakpointObserver.observe([\n      Breakpoints.XSmall,\n      Breakpoints.Small,\n      Breakpoints.Medium,\n      Breakpoints.Large,\n      Breakpoints.XLarge\n      ]).pipe(\n      map((result) => {\n        if (result.breakpoints[Breakpoints.XSmall]) {\n          return 1;\n        }\n        if (result.breakpoints[Breakpoints.Small]) {\n          return 2;\n        }\n        if (result.breakpoints[Breakpoints.Medium]) {\n          return 3;\n        }\n        if (result.breakpoints[Breakpoints.Large]) {\n          return 4;\n        }\n        if (result.breakpoints[Breakpoints.XLarge]) {\n          return 5;\n        }\n      })\n    );\n  }\n\n  public viewCharacter(card: Character) {\n    this.charactersLibService.setCurrent(card);\n    this.router.navigate(['profile']);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WebStorageModule } from 'ngx-store';\nimport { APP_INITIALIZER } from '@angular/core';\n\nimport { SharedLibModule } from 'shared-lib';\nimport { FormsLibModule } from 'forms-lib';\nimport { CharactersLibService } from './characters-lib.service';\n\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule,\n          MatButtonModule,\n          MatSidenavModule,\n          MatIconModule,\n          MatListModule,\n          MatGridListModule,\n          MatCardModule,\n          MatMenuModule } from '@angular/material';\nimport { CharactersHomeComponent } from './components/characters-home/characters-home.component';\nimport { CharactersProfileComponent } from './components/characters-profile/characters-profile.component';\nimport { CharactersCollectionComponent } from './components/characters-collection/characters-collection.component';\n\n// Use APP_INITIALIZER to load default config/projects before initializing.\n// e.g. https://stackblitz.com/edit/angular-app-initializer-load-config-mng\n// Note: Service function supplying defaults must return a Promise.\n// See: https://gist.github.com/fernandohu/122e88c3bcd210bbe41c608c36306db9\n// Export function for useFactory, as Arrow functions (Lambda) not supported.\n// See: https://github.com/angular/angular/issues/23629\n// Also add @dynamic or use variable to return Service function.\n// See: https://github.com/angular/angular/issues/19698#issuecomment-338340211\nexport function loadCharacters(chrSrv: CharactersLibService) {\n  // const init = () => prjSrv.init(); // Original arrow function for provider.\n  // Arrow function not necessary once removed from providers seciton below.\n  const init = function() {\n    console.log('Initializing Versed');\n    return chrSrv.init();\n  };\n  return init;\n}\n\n@NgModule({\n  declarations: [\n    CharactersHomeComponent,\n    CharactersProfileComponent,\n    CharactersCollectionComponent\n  ],\n  imports: [\n    CommonModule,\n    WebStorageModule,\n    FormsLibModule,\n    SharedLibModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule\n  ],\n  exports: [\n    CharactersHomeComponent,\n    CharactersProfileComponent,\n    CharactersCollectionComponent,\n    FormsLibModule\n  ],\n  providers: [CharactersLibService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: loadCharacters,\n      deps: [CharactersLibService],\n      multi: true\n    }],\n  entryComponents: []\n})\nexport class CharactersLibModule { }\n"],"names":[],"mappings":"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"}
