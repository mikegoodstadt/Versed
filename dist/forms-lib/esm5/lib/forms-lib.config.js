/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { RepeatSectionComponent } from './types/repeat-section/repeat-section.component';
import { InputChipsComponent } from './types/input-chips/input-chips.component';
import { InputPercentageComponent } from './types/input-percentage/input-percentage.component';
import { PanelWrapperComponent } from './wrappers/panel-wrapper/panel-wrapper.component';
import { ErrorWrapperComponent } from './wrappers/error-wrapper/error-wrapper.component';
import { maxlengthValidationMessage, maxValidationMessage, minlengthValidationMessage, minValidationMessage } from './helpers/validation-messages';
import { maximumMoneyValidation } from './helpers/validators';
/** @type {?} */
export var config = {
    types: [
        { name: 'repeat', component: RepeatSectionComponent },
        { name: 'chips', component: InputChipsComponent },
        { name: 'percentage', component: InputPercentageComponent }
    ],
    wrappers: [
        { name: 'panel', component: PanelWrapperComponent },
        { name: 'error-on-top', component: ErrorWrapperComponent }
    ],
    validationMessages: [
        { name: 'required', message: 'This field is required' },
        { name: 'minlength', message: minlengthValidationMessage },
        { name: 'maxlength', message: maxlengthValidationMessage },
        { name: 'min', message: minValidationMessage },
        { name: 'max', message: maxValidationMessage },
        { name: 'maximumMoneyValidation', message: 'should be 100' }
    ],
    validators: [
        { name: 'maximumMoneyValidation', validation: maximumMoneyValidation }
    ]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybXMtbGliLmNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2Zvcm1zLWxpYi8iLCJzb3VyY2VzIjpbImxpYi9mb3Jtcy1saWIuY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQUN6RixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUNoRixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUMvRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUN6RixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUN6RixPQUFPLEVBQ0wsMEJBQTBCLEVBQzFCLG9CQUFvQixFQUNwQiwwQkFBMEIsRUFDMUIsb0JBQW9CLEVBQ3JCLE1BQU0sK0JBQStCLENBQUM7QUFDdkMsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7O0FBRTlELE1BQU0sS0FBTyxNQUFNLEdBQWlCO0lBQ2xDLEtBQUssRUFBRTtRQUNMLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsc0JBQXNCLEVBQUU7UUFDckQsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxtQkFBbUIsRUFBRTtRQUNqRCxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLHdCQUF3QixFQUFFO0tBQzVEO0lBQ0QsUUFBUSxFQUFFO1FBQ1IsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxxQkFBcUIsRUFBRTtRQUNuRCxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsU0FBUyxFQUFFLHFCQUFxQixFQUFFO0tBQzNEO0lBQ0Qsa0JBQWtCLEVBQUU7UUFDbEIsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRTtRQUN2RCxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLDBCQUEwQixFQUFFO1FBQzFELEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsMEJBQTBCLEVBQUU7UUFDMUQsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRTtRQUM5QyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLG9CQUFvQixFQUFFO1FBQzlDLEVBQUUsSUFBSSxFQUFFLHdCQUF3QixFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUU7S0FDN0Q7SUFDRCxVQUFVLEVBQUU7UUFDVixFQUFFLElBQUksRUFBRSx3QkFBd0IsRUFBRSxVQUFVLEVBQUUsc0JBQXNCLEVBQUU7S0FDdkU7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbmZpZ09wdGlvbiB9IGZyb20gJ0BuZ3gtZm9ybWx5L2NvcmUnO1xuXG4gIGltcG9ydCB7IFJlcGVhdFNlY3Rpb25Db21wb25lbnQgfSBmcm9tICcuL3R5cGVzL3JlcGVhdC1zZWN0aW9uL3JlcGVhdC1zZWN0aW9uLmNvbXBvbmVudCc7XG4gIGltcG9ydCB7IElucHV0Q2hpcHNDb21wb25lbnQgfSBmcm9tICcuL3R5cGVzL2lucHV0LWNoaXBzL2lucHV0LWNoaXBzLmNvbXBvbmVudCc7XG4gIGltcG9ydCB7IElucHV0UGVyY2VudGFnZUNvbXBvbmVudCB9IGZyb20gJy4vdHlwZXMvaW5wdXQtcGVyY2VudGFnZS9pbnB1dC1wZXJjZW50YWdlLmNvbXBvbmVudCc7XG4gIGltcG9ydCB7IFBhbmVsV3JhcHBlckNvbXBvbmVudCB9IGZyb20gJy4vd3JhcHBlcnMvcGFuZWwtd3JhcHBlci9wYW5lbC13cmFwcGVyLmNvbXBvbmVudCc7XG4gIGltcG9ydCB7IEVycm9yV3JhcHBlckNvbXBvbmVudCB9IGZyb20gJy4vd3JhcHBlcnMvZXJyb3Itd3JhcHBlci9lcnJvci13cmFwcGVyLmNvbXBvbmVudCc7XG4gIGltcG9ydCB7XG4gICAgbWF4bGVuZ3RoVmFsaWRhdGlvbk1lc3NhZ2UsXG4gICAgbWF4VmFsaWRhdGlvbk1lc3NhZ2UsXG4gICAgbWlubGVuZ3RoVmFsaWRhdGlvbk1lc3NhZ2UsXG4gICAgbWluVmFsaWRhdGlvbk1lc3NhZ2VcbiAgfSBmcm9tICcuL2hlbHBlcnMvdmFsaWRhdGlvbi1tZXNzYWdlcyc7XG4gIGltcG9ydCB7IG1heGltdW1Nb25leVZhbGlkYXRpb24gfSBmcm9tICcuL2hlbHBlcnMvdmFsaWRhdG9ycyc7XG5cbiAgZXhwb3J0IGNvbnN0IGNvbmZpZzogQ29uZmlnT3B0aW9uID0ge1xuICAgIHR5cGVzOiBbXG4gICAgICB7IG5hbWU6ICdyZXBlYXQnLCBjb21wb25lbnQ6IFJlcGVhdFNlY3Rpb25Db21wb25lbnQgfSxcbiAgICAgIHsgbmFtZTogJ2NoaXBzJywgY29tcG9uZW50OiBJbnB1dENoaXBzQ29tcG9uZW50IH0sXG4gICAgICB7IG5hbWU6ICdwZXJjZW50YWdlJywgY29tcG9uZW50OiBJbnB1dFBlcmNlbnRhZ2VDb21wb25lbnQgfVxuICAgIF0sXG4gICAgd3JhcHBlcnM6IFtcbiAgICAgIHsgbmFtZTogJ3BhbmVsJywgY29tcG9uZW50OiBQYW5lbFdyYXBwZXJDb21wb25lbnQgfSxcbiAgICAgIHsgbmFtZTogJ2Vycm9yLW9uLXRvcCcsIGNvbXBvbmVudDogRXJyb3JXcmFwcGVyQ29tcG9uZW50IH1cbiAgICBdLFxuICAgIHZhbGlkYXRpb25NZXNzYWdlczogW1xuICAgICAgeyBuYW1lOiAncmVxdWlyZWQnLCBtZXNzYWdlOiAnVGhpcyBmaWVsZCBpcyByZXF1aXJlZCcgfSxcbiAgICAgIHsgbmFtZTogJ21pbmxlbmd0aCcsIG1lc3NhZ2U6IG1pbmxlbmd0aFZhbGlkYXRpb25NZXNzYWdlIH0sXG4gICAgICB7IG5hbWU6ICdtYXhsZW5ndGgnLCBtZXNzYWdlOiBtYXhsZW5ndGhWYWxpZGF0aW9uTWVzc2FnZSB9LFxuICAgICAgeyBuYW1lOiAnbWluJywgbWVzc2FnZTogbWluVmFsaWRhdGlvbk1lc3NhZ2UgfSxcbiAgICAgIHsgbmFtZTogJ21heCcsIG1lc3NhZ2U6IG1heFZhbGlkYXRpb25NZXNzYWdlIH0sXG4gICAgICB7IG5hbWU6ICdtYXhpbXVtTW9uZXlWYWxpZGF0aW9uJywgbWVzc2FnZTogJ3Nob3VsZCBiZSAxMDAnIH1cbiAgICBdLFxuICAgIHZhbGlkYXRvcnM6IFtcbiAgICAgIHsgbmFtZTogJ21heGltdW1Nb25leVZhbGlkYXRpb24nLCB2YWxpZGF0aW9uOiBtYXhpbXVtTW9uZXlWYWxpZGF0aW9uIH1cbiAgICBdXG4gIH07XG4iXX0=