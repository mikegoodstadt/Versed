{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://forms-lib/lib/schemas/field.model.ts","ng://forms-lib/lib/schemas/form-elements/uuid.ts","ng://forms-lib/lib/schemas/form-elements/title.ts","ng://forms-lib/lib/schemas/form-elements/description.ts","ng://forms-lib/lib/schemas/form-elements/category.ts","ng://forms-lib/lib/schemas/form-elements/state.ts","ng://forms-lib/lib/schemas/form-elements/layout.ts","ng://forms-lib/lib/schemas/form-elements/widgets.ts","ng://forms-lib/lib/schemas/form-elements/email.ts","ng://forms-lib/lib/schemas/form-elements/percentage.ts","ng://forms-lib/lib/forms-lib.service.ts","ng://forms-lib/lib/types/repeat-section/repeat-section.component.ts","ng://forms-lib/lib/types/input-chips/input-chips.component.ts","ng://forms-lib/lib/types/input-percentage/input-percentage.component.ts","ng://forms-lib/lib/wrappers/panel-wrapper/panel-wrapper.component.ts","ng://forms-lib/lib/wrappers/error-wrapper/error-wrapper.component.ts","ng://forms-lib/lib/helpers/validation-messages.ts","ng://forms-lib/lib/helpers/validators.ts","ng://forms-lib/lib/forms-lib.config.ts","ng://forms-lib/lib/forms-lib.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","Field","field","type","key","templateOptions","options","input","email","label","password","minLength","required","checkbox","checked","select","textarea","radio","disabled","placeholder","description","FormsLibService","getDefaultForm","getFormById","id","generateCleanConfiguration","clone","JSON","parse","stringify","getModelFields","model","fields","keys","fieldConfig","fields_1","__values","tslib_1.__values","fields_1_1","fieldFn","toUpperCase","fieldOps","ELEMENTS","console","log","Injectable","args","providedIn","RepeatSectionComponent","builder","_super","tslib_1.__extends","Component","selector","template","FormlyFormBuilder","FieldArrayType","InputChipsComponent","_this","onDestroy$","Subject","itemControl","FormControl","selectable","removable","addOnBlur","separatorKeysCodes","ENTER","COMMA","ngOnInit","filter","valueChanges","pipe","takeUntil","startWith","map","item","_filter","ngAfterViewInit","_formField","formField","ngOnDestroy","complete","defineProperty","formControl","add","event","matAutocomplete","isOpen","trim","setValue","selected","option","viewValue","remove","slice","markAsTouched","to","filterValue","toLowerCase","indexOf","onBlur","focus","ViewChild","FieldType","InputPercentageComponent","limitToHundred","rawValue","parseInt","PanelWrapperComponent","read","ViewContainerRef","FieldWrapper","ErrorWrapperComponent","minlengthValidationMessage","err","maxlengthValidationMessage","maxLength","minValidationMessage","min","maxValidationMessage","max","maximumMoneyValidation","control","replace","config","types","name","component","wrappers","validationMessages","message","validators","validation","FormsLibModule","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","FormlyModule","forRoot","FormlyMaterialModule","MatChipsModule","MatIconModule","MatAutocompleteModule","exports","providers","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { FormlyTemplateOptions } from '@ngx-formly/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\n\n// @dynamic\nexport class Field {\n\n  public static field(\n    type: string,\n    key: string,\n    templateOptions?: FormlyTemplateOptions,\n    options?: any\n  ): FormlyFieldConfig {\n    return {\n      type,\n      key,\n      templateOptions,\n      ...options\n    };\n  }\n\n  public static input(key: string, templateOptions?: FormlyTemplateOptions, options?: any): FormlyFieldConfig {\n    return this.field('input', key, templateOptions, options);\n  }\n\n  public static email(key: string, templateOptions?: FormlyTemplateOptions, options?: any): FormlyFieldConfig {\n    const defaults = {\n      type: 'email',\n      label: 'Email'\n    };\n    return this.input(key, { ...templateOptions, ...defaults }, options);\n  }\n\n  public static password(key: string, templateOptions?: FormlyTemplateOptions, options?: any): FormlyFieldConfig {\n    const defaults = {\n      label: 'Password',\n      type: 'password',\n      minLength: 3,\n      required: true\n    };\n    return this.input(key, { ...templateOptions, ...defaults }, options);\n  }\n\n  public static checkbox(key: string, templateOptions?: FormlyTemplateOptions, options?: any): FormlyFieldConfig {\n    const defaults = {\n      type: 'checkbox',\n      label: 'Checkbox',\n      checked: false\n    };\n    return this.input(key, { ...templateOptions, ...defaults }, options);\n  }\n\n  public static select(key: string, templateOptions?: FormlyTemplateOptions, options?: any): FormlyFieldConfig {\n    return this.field('select', key, templateOptions, options);\n  }\n\n  public static textarea(key: string, templateOptions?: FormlyTemplateOptions, options?: any): FormlyFieldConfig {\n    return this.field('textarea', key, templateOptions, options);\n  }\n\n  public static radio(key: string, templateOptions?: FormlyTemplateOptions, options?: any): FormlyFieldConfig {\n    return this.field('radio', key, templateOptions, options);\n  }\n\n}\n","import { Field } from '../field.model';\n\nexport const UUID = (disabled) => {\n  const templateOptions = {\n    label: 'UUID',\n    placeholder: 'Enter UUID',\n    required: true,\n    disabled: true\n  };\n\n  return {\n    ...Field.input(\n      'uuid',\n      {\n        ...templateOptions\n      }\n    )\n  };\n};\n","import { Field } from '../field.model';\n\nexport const TITLE = (disabled) => {\n  const templateOptions = {\n    label: 'Title',\n    placeholder: 'Enter Title',\n    required: true,\n    disabled: disabled\n  };\n\n  return {\n    ...Field.input(\n      'title',\n      {\n        ...templateOptions\n      }\n    )\n  };\n};\n","import { Field } from '../field.model';\n\nexport const DESCRIPTION = (disabled) => {\n  const templateOptions = {\n    label: 'Description',\n    placeholder: 'Enter Description',\n    required: true,\n    disabled: disabled\n  };\n\n  return {\n    ...Field.input(\n      'description',\n      {\n        ...templateOptions\n      }\n    )\n  };\n};\n","import { Field } from '../field.model';\n\nexport const CATEGORY = (disabled) => ({\n  ...Field.field(\n    'chips',\n    'category',\n    {\n      label: 'Category',\n      placeholder: 'Enter Category',\n      required: true,\n      disabled: disabled\n    }\n  )\n});\n","import { Field } from '../field.model';\n\nexport const STATE = (disabled) => {\n  const templateOptions = {\n    label: 'State',\n    disabled: disabled\n  };\n\n  return {\n    ...Field.checkbox(\n      'state',\n      {\n        ...templateOptions\n      }\n    )\n  };\n};\n","import { Field } from '../field.model';\n\nexport const LAYOUT = (disabled) => ({\n  ...Field.field(\n    'select',\n    'layout',\n    {\n      label: 'Layout',\n      placeholder: 'Select Layout',\n      required: true,\n      disabled: disabled\n    }\n  )\n});\n","import { Field } from '../field.model';\n\nexport const WIDGETS = (disabled) => ({\n  ...Field.field(\n    'checkbox',\n    'widgets',\n    {\n      label: 'Widgets',\n      placeholder: 'Select Widgets',\n      required: true,\n      disabled: disabled\n    }\n  )\n});\n","import { Field } from '../field.model';\n\nexport const EMAIL = (disabled) => ({\n  ...Field.email(\n    'email',\n    {\n      placeholder: 'Enter your email',\n      required: true,\n      disabled: disabled\n    }\n  )\n});\n","import { Field } from '../field.model';\n\nexport const PERCENTAGE = (disabled) => ({\n  ...Field.field(\n    'percentage',\n    'percentage',\n    {\n      label: 'Enter you percentage from 1 to 100 %',\n      description: 'Try to enter 200%',\n      disabled: disabled\n    }\n  )\n});\n","import { Injectable } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport * as ELEMENTS from './schemas/form-elements';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormsLibService {\n\n  constructor() { }\n  public getDefaultForm(): FormlyFieldConfig[] {\n    return null; // DEFAULT_FORM().template;\n  }\n\n  public getFormById(id: string, disabled = false) {\n    return null; // FORMS_VALUES(disabled)[id];\n  }\n\n  private generateCleanConfiguration(clone: object[]) {\n    return JSON.parse(JSON.stringify(clone));\n  }\n\n  public getModelFields(model: any): FormlyFieldConfig[] {\n    // for each model prop test type and generate appropriate formfield\n    const fields = Object.keys(model);\n    const fieldConfig = [];\n    for (const field of fields) {\n      const fieldFn: string = field.toUpperCase();\n      let fieldOps = {};\n      if (typeof ELEMENTS[fieldFn] === 'function') {\n        // console.log('FormsLib ELEMENTS contains: ', fieldFn);\n        fieldOps = ELEMENTS[fieldFn]();\n        fieldConfig.push(fieldOps);\n      } else {\n        console.log('FormsLib ELEMENTS does not contain field: ', field);\n      }\n    }\n    // console.log(fieldConfig);\n    return fieldConfig;\n  }\n}\n","import { Component } from '@angular/core';\nimport { FieldArrayType, FormlyFormBuilder } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-repeat-section',\n  templateUrl: './repeat-section.component.html',\n  styleUrls: ['./repeat-section.component.scss']\n})\nexport class RepeatSectionComponent extends FieldArrayType {\n  constructor(builder: FormlyFormBuilder) {\n    super(builder);\n  }\n}\n","import { Component, ViewChild, OnInit, ElementRef, OnDestroy, AfterViewInit } from '@angular/core';\nimport { FieldType } from '@ngx-formly/material';\nimport {\n  MatChipInputEvent,\n  MatAutocomplete,\n  MatAutocompleteSelectedEvent\n} from '@angular/material';\nimport { Observable, Subject } from 'rxjs';\nimport { startWith, switchMap, map, tap, takeUntil } from 'rxjs/operators';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'formly-input-chips',\n  templateUrl: './input-chips.component.html',\n})\nexport class InputChipsComponent extends FieldType implements OnInit, OnDestroy, AfterViewInit {\n  onDestroy$ = new Subject<void>();\n\n  itemControl = new FormControl();\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  filter: Observable<any[]>;\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.filter = this.itemControl.valueChanges.pipe(\n      takeUntil(this.onDestroy$),\n      startWith(null),\n      map((item: any | null) => item ? this._filter(item) : this._filter(''))\n    );\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    // temporary fix for https://github.com/angular/material2/issues/6728\n    (<any> this.matAutocomplete)._formField = this.formField;\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroy$.next();\n    this.onDestroy$.complete();\n  }\n\n  get empty() { return this.formControl.value.length === 0; }\n\n  public add(event: MatChipInputEvent): void {\n    // Add item only when MatAutocomplete is not open\n    // To make sure this does not conflict with OptionSelected Event\n    if (!this.matAutocomplete.isOpen) {\n      const input = event.input;\n      const value = event.value;\n\n      // Add item\n      if ((value || '').trim()) {\n        this.formControl.setValue([\n          ...this.formControl.value,\n          value.trim(),\n        ]);\n      }\n\n      // Reset the input value\n      if (input) {\n        input.value = '';\n      }\n\n      this.itemControl.setValue(null);\n    }\n  }\n\n  public selected(event: MatAutocompleteSelectedEvent): void {\n    this.formControl.setValue([\n      ...this.formControl.value,\n      event.option.viewValue,\n    ]);\n\n    this.itemControl.setValue(null);\n  }\n\n  public remove(i: number): void {\n    const value = this.formControl.value;\n\n    this.formControl.setValue([\n      ...value.slice(0, i),\n      ...value.slice(i + 1, value.length)\n    ]);\n    this.formControl.markAsTouched()\n  }\n\n  private _filter(value: any): any[] {\n    if (!this.to.filter) {return [];}\n    if (!value) {return this.to.filter.slice();}\n\n    const filterValue = value.toLowerCase();\n\n    return this.to.filter.filter(\n      item => item.toLowerCase().indexOf(filterValue) === 0\n    );\n  }\n\n  onBlur() {\n    this.formControl.markAsTouched();\n    this.field.focus = false;\n  }\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-input-percentage',\n  templateUrl: './input-percentage.component.html'\n})\nexport class InputPercentageComponent extends FieldType {\n  public limitToHundred(rawValue) {\n    const value = parseInt(rawValue, 10);\n\n    if (value < 100) {\n      if (value < 10) {\n        return [/\\d/, ' %'];\n      } else {\n      return [/\\d/, /\\d/, ' %'];\n      }\n    } else {\n      return ['100 %'];\n    }\n  }\n}\n","import { Component, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-wrapper-panel',\n  templateUrl: './panel-wrapper.component.html'\n})\nexport class PanelWrapperComponent extends FieldWrapper {\n  @ViewChild('fieldComponent', {read: ViewContainerRef}) fieldComponent: ViewContainerRef;\n}\n","import { Component, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-wrapper-error',\n  templateUrl: './error-wrapper.component.html'\n})\nexport class ErrorWrapperComponent extends FieldWrapper {\n  @ViewChild('fieldComponent', {read: ViewContainerRef}) fieldComponent: ViewContainerRef;\n}\n","export function minlengthValidationMessage(err, field) {\n  return `Should have at least ${field.templateOptions.minLength} characters`;\n}\n\nexport function maxlengthValidationMessage(err, field) {\n  return `This value should be less than ${field.templateOptions.maxLength} characters`;\n}\n\nexport function minValidationMessage(err, field) {\n  return `This value should be more than ${field.templateOptions.min}`;\n}\n\nexport function maxValidationMessage(err, field) {\n  return `This value should be less than ${field.templateOptions.max}`;\n}","export function maximumMoneyValidation(control, type) {\n  const value = control.value;\n  if (value) {\n    const unMasked = parseInt(value.replace(/\\D/g, ''));\n    if (unMasked > 10000) {\n      return { maximumMoneyValidation: 'Should be bellow 10.000' };\n    }\n  }\n  return null;\n}\n\nexport function UuidValidation(control, type) {\n  const value = control.value;\n  if (value) {\n    const uuidValid = true; // UuidService.textUuid(value);\n\n    if (!uuidValid) {\n      return { UuidValidation: 'UUID not valid' };\n    }\n  }\n  return null;\n}\n","import { ConfigOption } from '@ngx-formly/core';\n\n  import { RepeatSectionComponent } from './types/repeat-section/repeat-section.component';\n  import { InputChipsComponent } from './types/input-chips/input-chips.component';\n  import { InputPercentageComponent } from './types/input-percentage/input-percentage.component';\n  import { PanelWrapperComponent } from './wrappers/panel-wrapper/panel-wrapper.component';\n  import { ErrorWrapperComponent } from './wrappers/error-wrapper/error-wrapper.component';\n  import {\n    maxlengthValidationMessage,\n    maxValidationMessage,\n    minlengthValidationMessage,\n    minValidationMessage\n  } from './helpers/validation-messages';\n  import { maximumMoneyValidation } from './helpers/validators';\n\n  export const config: ConfigOption = {\n    types: [\n      { name: 'repeat', component: RepeatSectionComponent },\n      { name: 'chips', component: InputChipsComponent },\n      { name: 'percentage', component: InputPercentageComponent }\n    ],\n    wrappers: [\n      { name: 'panel', component: PanelWrapperComponent },\n      { name: 'error-on-top', component: ErrorWrapperComponent }\n    ],\n    validationMessages: [\n      { name: 'required', message: 'This field is required' },\n      { name: 'minlength', message: minlengthValidationMessage },\n      { name: 'maxlength', message: maxlengthValidationMessage },\n      { name: 'min', message: minValidationMessage },\n      { name: 'max', message: maxValidationMessage },\n      { name: 'maximumMoneyValidation', message: 'should be 100' }\n    ],\n    validators: [\n      { name: 'maximumMoneyValidation', validation: maximumMoneyValidation }\n    ]\n  };\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyMaterialModule } from '@ngx-formly/material';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\n/** wrappers */\nimport { PanelWrapperComponent } from './wrappers/panel-wrapper/panel-wrapper.component';\nimport { ErrorWrapperComponent } from './wrappers/error-wrapper/error-wrapper.component';\n\n/** types */\nimport { RepeatSectionComponent } from './types/repeat-section/repeat-section.component';\nimport { InputChipsComponent } from './types/input-chips/input-chips.component';\nimport { InputPercentageComponent } from './types/input-percentage/input-percentage.component';\n\n/** configuration */\nimport { config } from './forms-lib.config';\n\n@NgModule({\n  declarations: [\n    PanelWrapperComponent,\n    ErrorWrapperComponent,\n    RepeatSectionComponent,\n    InputChipsComponent,\n    InputPercentageComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot(config),\n    FormlyMaterialModule,\n    MatChipsModule,\n    MatIconModule,\n    MatAutocompleteModule\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    FormlyModule,\n    FormlyMaterialModule,\n    PanelWrapperComponent,\n    ErrorWrapperComponent,\n    RepeatSectionComponent,\n    InputChipsComponent,\n    InputPercentageComponent\n  ],\n  providers: [],\n  entryComponents: []\n})\nexport class FormsLibModule { }\n"]}